
// Generated By Leetcode2IDE
#include <bits/stdc++.h>
using namespace std;



class Solution {
public:
vector<vector<int>> dp;

int f(int l, int r, vector<int> &ind, int x){

    if(l>=r){
        return 0;
    }

    
    if(dp[l][r] != -1){
        return dp[l][r];
    }

    int p1 = ind[r] - ind[l] + f(l+1, r-1, ind, x);
    int p2 = ind[l+1] - ind[l] + f(l+2, r, ind, x);
    int p3 = ind[r] - ind[r-1] + f(l, r-2, ind, x);

    int p4 = x + f(l+1, r-1, ind, x);
    int p5 = x + f(l+2, r, ind, x);
    int p6 = x + f(l, r-2, ind, x);



    return dp[l][r] = min({p1, p2, p3, p4, p5, p6});
}


    int minOperations(string s1, string s2, int x) {
        
        int n = s1.size();
        vector<int> ind;

        for(int i = 0; i<n; i++){

            if(s1[i] != s2[i]){
                ind.push_back(i);
            }
        }

        if(ind.size()%2 != 0){
            return -1;
        }

        dp.resize(ind.size() +1, vector<int> (ind.size()+1, -1));
        return f(0, ind.size()-1, ind, x);
    }
};


int main() {
	
	Solution leetcode2IDE;
	string s11 = "1100011000";
	string s21 = "0101001010";
	int x1 = 2;
	int output_1 = 4;
	if(leetcode2IDE.minOperations(s11,s21,x1)==output_1){
		cout << "Sample #1 : Accepted" << endl;
	}else{
		cout << "Sample #1 : Wrong Answer" << endl;
	}

	string s12 = "10110";
	string s22 = "00011";
	int x2 = 4;
	int output_2 = -1;
	if(leetcode2IDE.minOperations(s12,s22,x2)==output_2){
		cout << "Sample #2 : Accepted" << endl;
	}else{
		cout << "Sample #2 : Wrong Answer" << endl;
	}

	


	return 0;
}
	