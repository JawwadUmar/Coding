// Generated By Leetcode2IDE
#include <bits/stdc++.h>
using namespace std;

int longSubarrWthSumDivByK(int arr[], int n, int k)
	{

         vector<long long> prefsum(n, 0);
	    
	    prefsum[0] = arr[0];
	    
	    for(int i =1; i<n; i++){
	        prefsum[i] = prefsum[i-1] + arr[i];
	    }

        for(auto &it: prefsum){
            it = it%k;

            if(it<0){
                it = it + k;
            }
            cout<<it<<" ";
        }
        cout<<endl;

        map<int, int> mp;
        mp[0] = -1;
        int res = 0;

        for(int i = 0; i<n; i++){
            int x = prefsum[i];
            
            if(mp.find(x) == mp.end()){
                mp[x]++;
            }

            else{
                // cout<<x<<endl;
                // cout<<i<<" "<<mp[x]<<endl;
                res = max(res, i-mp[x]+1);
            }
        }

        return res;
	    
	}
int main() {
	
	   int n, k;
       cin>>n>>k;

       int arr[n];

       for(int i =0; i<n; i++){
        cin>>arr[i];
       }

       cout<<longSubarrWthSumDivByK(arr, n, k);
}