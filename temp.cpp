
// Generated By Leetcode2IDE
#include <bits/stdc++.h>
using namespace std;



class Solution {
public:
    int minFlips(vector<vector<int>>& grid) {
        int n = grid.size();
        int m = grid[0].size();

        for(int i = 0; i<=(n-1)/2; i++){
            for(int j = 0; j<=(m-1)/2; j++){
                int r = i;
                int c = j;

                int nr = n-1-r;
                int nc = m-1-c;
                int cnt = grid[r][c];

                //r nc
                //nr c
                //nr nc

                if(nc != c && nr != r){
                    cnt+= grid[r][nc];
                    cnt+= grid[nr][c];
                    cnt+= grid[nr][nc];

                    cnt = cnt%4;
                    cnt = min(cnt, 4- cnt);
                }
            }
        }
    }
};


int main() {
	
	Solution leetcode2IDE;
	


	return 0;
}
	